(()=>{"use strict";var __webpack_modules__={321:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"h\": () => (/* binding */ idUser)\n});\n\n;// CONCATENATED MODULE: ./src/scripts/constants.js\nvar buttonPopupProfile = document.querySelector('.profile__edit-button');\nvar buttonPopupPlace = document.querySelector('.profile__add-button');\nvar popupElementProfile = document.querySelector('.popup_type_profile');\nvar popupElementPlace = document.querySelector('.popup_type_place');\nvar popupConteiners = document.querySelector('.popups');\nvar nameInputPlace = document.querySelector('.popup__input_type_place');\nvar popupInputImagePlace = document.querySelector('.popup__input_type_url');\nvar popupAvatar = document.querySelector('.popup_type_avatar');\nvar popupFormPlace = document.querySelector('.popup__form_place');\nvar popupFormProfile = document.querySelector('.popup__form_profile');\nvar avatarPhoto = document.querySelector('.profile__avatar-photo');\nvar popupFormAvatar = document.querySelector('.popup__form_avatar');\n\n//переменные для работы с карточками попапа profile\nvar profileName = document.querySelector('.profile__name');\nvar profileStatus = document.querySelector('.profile__status');\nvar nameImputProfile = document.querySelector('.popup__input_type_name');\nvar jobInputProfile = document.querySelector('.popup__input_type_job');\nvar avatarInput = document.querySelector('.popup__input_type_avatar');\nvar template = document.querySelector('#template-elements').content.querySelector('.element');\nvar popupImg = document.querySelector('.popup_type_img');\nvar popupImgType = popupImg.querySelector('.popup__image');\nvar popupImgCaption = popupImg.querySelector('.popup__caption');\nvar constants_elements = document.querySelector('.elements');\nvar profileButton = document.querySelector('.profile__avatar_overlay');\nvar formElement = document.querySelector('.popup__form');\nvar formInput = formElement.querySelector('.popup__input');\nvar formError = formElement.querySelector(\"#\".concat(formInput.id, \"-error\"));\nvar popupSaveButton = document.querySelector('.popup__save-button');\nvar popupSaveButtonAvatar = document.querySelector('.popup__save-button_avatar');\nvar popupSaveButtonPlace = document.querySelector('.popup__save-button_place');\nvar popupSaveButtonProfile = document.querySelector('.popup__save-button_profile');\nvar buttonTrash = template.querySelector('.element__delete');\nvar popupDeleteCard = document.querySelector('.popup_delete-card');\nvar confirmationCardDelete = document.querySelector('.popup_button_delete');\n\n// export const settings = {\n//     inputError: 'popup__input_error',\n//     inputErrorActiv: 'form__input-error_active',\n//     buttonElementInactive: 'popup__save-button_inactive',\n// };\n\nvar config = {\n  baseUrl: 'https://nomoreparties.co/v1/wbf-cohort-4',\n  headers: {\n    authorization: '8ba7845b-fdea-4d24-b67e-45a7e7292acb',\n    'Content-Type': 'application/json'\n  }\n};\nfunction renderLoad(isLoading, button) {\n  var buttonText = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'Сохранить';\n  var loadingText = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'Сохранение...';\n  if (isLoading) {\n    button.textContent = loadingText;\n  } else {\n    button.textContent = buttonText;\n  }\n}\n;\n;// CONCATENATED MODULE: ./src/scripts/valid.js\n\n\n//import { settings } from './constants.js';\nvar settings = {\n  formSelector: \".popup__form\",\n  inputSelector: \".popup__input\",\n  buttonSelector: \".popup__save-button\",\n  inputError: \"popup__input_error\",\n  inputErrorActiv: \"form__input-error_active\",\n  buttonElementInactive: \"popup__save-button_inactive\"\n};\nvar showInputError = function showInputError(formElement, inputElement, errorMessage, settings) {\n  var errorElement = formElement.querySelector(\"#\".concat(inputElement.id, \"-error\"));\n  inputElement.classList.add(settings.inputError);\n  errorElement.classList.add(settings.inputErrorActiv);\n  errorElement.textContent = errorMessage;\n};\nvar hideInputError = function hideInputError(formElement, inputElement, settings) {\n  var errorElement = formElement.querySelector(\"#\".concat(inputElement.id, \"-error\"));\n  inputElement.classList.remove(settings.inputError);\n  errorElement.classList.remove(settings.inputErrorActiv);\n  errorElement.textContent = '';\n};\nvar isValid = function isValid(formElement, inputElement, settings) {\n  if (!inputElement.validity.valid) {\n    showInputError(formElement, inputElement, inputElement.validationMessage, settings);\n  } else {\n    hideInputError(formElement, inputElement, settings);\n  }\n};\nvar setEventListeners = function setEventListeners(formElement, settings) {\n  var inputList = Array.from(formElement.querySelectorAll(settings.inputSelector));\n  var buttonElement = formElement.querySelector(settings.buttonSelector);\n  inputList.forEach(function (inputElement) {\n    inputElement.addEventListener('input', function () {\n      isValid(formElement, inputElement, settings);\n      toggleButtonState(inputList, buttonElement, settings);\n    });\n    formElement.addEventListener('reset', function () {\n      setTimeout(function () {\n        toggleButtonState(inputList, buttonElement, settings), 0;\n      });\n    });\n  });\n};\nvar enableValidation = function enableValidation(settings) {\n  var formList = Array.from(document.querySelectorAll(settings.formSelector));\n  formList.forEach(function (formElement) {\n    setEventListeners(formElement, settings);\n  });\n};\n\n//функция для проверки на валидность всех полей \nvar hasInvalidInput = function hasInvalidInput(inputList) {\n  return inputList.some(function (inputElement) {\n    return !inputElement.validity.valid;\n  });\n};\nvar toggleButtonState = function toggleButtonState(inputList, buttonElement, settings) {\n  if (hasInvalidInput(inputList)) {\n    buttonElement.classList.add(settings.buttonElementInactive);\n    buttonElement.disabled = true;\n  } else {\n    buttonElement.classList.remove(settings.buttonElementInactive);\n    buttonElement.disabled = false;\n  }\n};\n;// CONCATENATED MODULE: ./src/scripts/data.js\nvar initialCards = [{\n  name: 'Архыз',\n  link: 'https://pictures.s3.yandex.net/frontend-developer/cards-compressed/arkhyz.jpg'\n}, {\n  name: 'Иваново',\n  link: 'https://pictures.s3.yandex.net/frontend-developer/cards-compressed/ivanovo.jpg'\n}, {\n  name: 'Камчатка',\n  link: 'https://images.unsplash.com/photo-1634745186518-db2e653372c9?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxzZWFyY2h8NHx8JUQwJUJBJUQwJUIwJUQwJUJDJUQxJTg3JUQwJUIwJUQxJTgyJUQwJUJBJUQwJUIwfGVufDB8fDB8fA%3D%3D&auto=format&fit=crop&w=800&q=60'\n}, {\n  name: 'Холмогорский район',\n  link: 'https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kholmogorsky-rayon.jpg'\n}, {\n  name: 'Санк-Петербург',\n  link: 'https://media.istockphoto.com/id/152975250/ru/фото/ночной-город-и-канал-и-собор.jpg?s=612x612&w=0&k=20&c=P0WVPTADIwA3Hg5teablLnB8GDuHBb3EbItOhsuwJIU='\n}, {\n  name: 'Кольский',\n  link: 'https://media.istockphoto.com/id/507518886/ru/фото/хибины-зимой.jpg?s=612x612&w=0&k=20&c=D37R-qGr_xCKenu2rtBgYWvNisZ7x7lWGZoOuhE_NWc='\n}];\n;// CONCATENATED MODULE: ./src/scripts/api.js\n\nvar getResponse = function getResponse(res) {\n  if (res.ok) {\n    return res.json();\n  }\n  return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \".concat(res.status));\n};\nvar getInitialCards = function getInitialCards() {\n  return fetch(\"\".concat(config.baseUrl, \"/cards\"), {\n    headers: config.headers\n  }).then(getResponse);\n};\nvar getUser = function getUser() {\n  return fetch(\"\".concat(config.baseUrl, \"/users/me\"), {\n    headers: config.headers\n  }).then(getResponse);\n};\nvar addUser = function addUser(name, about) {\n  return fetch(\"\".concat(config.baseUrl, \"/users/me\"), {\n    method: 'POST',\n    headers: config.headers,\n    body: JSON.stringify({\n      name: name,\n      about: about\n    })\n  }).then(getResponse);\n};\nvar addCard = function addCard(data) {\n  return fetch(\"\".concat(config.baseUrl, \"/cards\"), {\n    method: 'POST',\n    headers: config.headers,\n    body: JSON.stringify({\n      name: data.name,\n      link: data.link\n    })\n  }).then(getResponse);\n};\nvar addLike = function addLike(cardId) {\n  return fetch(\"\".concat(config.baseUrl, \"/cards/likes/\").concat(cardId), {\n    method: 'PUT',\n    headers: config.headers\n  }).then(getResponse);\n};\nvar removeLike = function removeLike(cardId) {\n  return fetch(\"\".concat(config.baseUrl, \"/cards/likes/\").concat(cardId), {\n    method: 'DELETE',\n    headers: config.headers\n  }).then(getResponse);\n};\nvar addAvatar = function addAvatar(avatar) {\n  return fetch(\"\".concat(config.baseUrl, \"/users/me/avatar\"), {\n    method: 'PATCH',\n    headers: config.headers,\n    body: JSON.stringify({\n      avatar: avatar\n    })\n  }).then(getResponse);\n};\nvar deleteCard = function deleteCard(cardId) {\n  return fetch(\"\".concat(config.baseUrl, \"/cards/\").concat(cardId), {\n    method: 'DELETE',\n    headers: config.headers\n  }).then(function (res) {\n    if (!res.ok) {\n      return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \".concat(res.status));\n    }\n  });\n};\n;// CONCATENATED MODULE: ./src/scripts/card.js\n\n\n\n\n\n\n\n// функция добавления карточки \nvar createCard = function createCard(data) {\n  //console.log(data);\n  var card = template.cloneNode(true);\n  var trashElement = card.querySelector('.element__delete');\n  var countLike = card.querySelector('.element__like-number');\n  var likeElement = card.querySelector('.element__like-button');\n  card.id = data._id;\n  //наполняем данными функцию\n  card.querySelector('.element__text').textContent = data.name;\n  var imageTemplace = card.querySelector('.element__photo');\n  imageTemplace.src = data.link;\n  imageTemplace.alt = \"\\u0418\\u0437\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u0435 \".concat(data.name);\n  isLiked(data, countLike, likeElement);\n  if (data.owner._id !== idUser) {\n    trashElement.remove();\n  } else {\n    trashElement.addEventListener('click', handeDeleteCard);\n  }\n  // навешиваем на картинку обработчик события\n  imageTemplace.addEventListener('click', function () {\n    popupImgType.src = data.link;\n    popupImgType.alt = \"\\u0418\\u0437\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u0435 \".concat(data.name);\n    popupImgCaption.textContent = data.name;\n    openPopup(popupImg);\n  });\n  likeElement.addEventListener('click', function () {\n    return likeCard(countLike, likeElement);\n  });\n\n  //обязательно возвращаем карточку, иначе она не появится \n  return card;\n};\nfunction serverDeleteCard(evt) {\n  renderLoad(true, confirmationCardDelete, 'Да', 'Удаление...');\n  var deleteCardId = popupDeleteCard.id;\n  deleteCard(popupDeleteCard.id).then(function (res) {\n    popupDeleteCard.id = '';\n    document.getElementById(\"\".concat(deleteCardId)).remove();\n    closePopup(popupDeleteCard);\n  }).catch(function (err) {\n    console.log(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(err));\n  }).finally(function () {\n    renderLoad(false, confirmationCardDelete, 'Да', 'Удаление...');\n  });\n}\n// функция удаления карточки\nvar handeDeleteCard = function handeDeleteCard(event) {\n  event.preventDefault();\n  var elementCard = event.target.closest('.element');\n  openPopup(popupDeleteCard);\n  popupDeleteCard.id = elementCard.id;\n};\nvar renderCard = function renderCard(data) {\n  constants_elements.prepend(createCard(data));\n};\nvar likeCard = function likeCard(countLike, likeElement) {\n  if (likeElement.classList.contains('element__like-button_active')) {\n    removeLike(likeElement.closest('.element').id).then(function (dataCard) {\n      likeElement.classList.remove('element__like-button_active');\n      countLike.textContent = dataCard.likes.length;\n    }).catch(function (err) {\n      console.log(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(err));\n    });\n  } else {\n    addLike(likeElement.closest('.element').id).then(function (dataCard) {\n      likeElement.classList.add('element__like-button_active');\n      countLike.textContent = dataCard.likes.length;\n    }).catch(function (err) {\n      console.log(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \\u043D\\u0430\\u0445: \".concat(err));\n    });\n  }\n};\nfunction isLiked(data, countLike, likeElement) {\n  if (data.likes.length !== 0) {\n    countLike.textContent = data.likes.length;\n  }\n  data.likes.some(function (element) {\n    if (element._id === idUser) {\n      likeElement.classList.add('element__like-button_active');\n    }\n  });\n}\n;// CONCATENATED MODULE: ./src/scripts/modal.js\n\n\n\n\n\n// функция открытия попапа\nfunction openPopup(popup) {\n  popup.classList.add('popup_opened');\n  document.addEventListener('keydown', handleEsc);\n}\n;\n\n// функция закрытия попапа\nfunction closePopup() {\n  var openPopup = document.querySelector('.popup_opened');\n  if (!openPopup) return;\n  openPopup.classList.remove('popup_opened');\n  document.removeEventListener('keydown', handleEsc);\n}\n;\nvar handleEsc = function handleEsc(evt) {\n  if (evt.key === 'Escape') {\n    closePopup();\n  }\n};\n\n// обработчик события открытия попапа профиля при нажитии кнопки\nbuttonPopupProfile.addEventListener('click', function () {\n  nameImputProfile.value = profileName.textContent;\n  jobInputProfile.value = profileStatus.textContent;\n  openPopup(popupElementProfile);\n});\n\n// обработчик события открытия попапа плэйса при нажитии кнопки\nbuttonPopupPlace.addEventListener('click', function () {\n  openPopup(popupElementPlace);\n});\nprofileButton.addEventListener('click', function () {\n  openPopup(popupAvatar);\n});\n\n// обработчик события закрытия попапа при нажатии кнопки\npopupConteiners.addEventListener('click', function (event) {\n  if (event.target.closest('.popup__close-button') || event.target.classList.contains('popup')) {\n    closePopup();\n  }\n});\nfunction handleSubmitProfile(evt) {\n  evt.preventDefault();\n  renderLoad(true, popupSaveButtonProfile);\n  addUser(nameImputProfile.value, jobInputProfile.value).then(function (res) {\n    profileName.id = res._id, profileName.textContent = res.name, profileStatus.textContent = res.about;\n    evt.target.reset();\n    closePopup(popupElementProfile);\n  }).catch(function (err) {\n    console.log(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(err));\n  }).finally(function () {\n    renderLoad(false, popupSaveButtonProfile);\n  });\n}\nfunction handleSubmitCard(evt) {\n  evt.preventDefault();\n  renderLoad(true, popupSaveButtonPlace, 'Создать', 'Создание...');\n  addCard({\n    name: \"\".concat(nameInputPlace.value),\n    link: \"\".concat(popupInputImagePlace.value)\n  }).then(function (res) {\n    renderCard(res);\n    evt.target.reset();\n    closePopup();\n  }).catch(function (err) {\n    console.log(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(err));\n  }).finally(function () {\n    renderLoad(false, popupSaveButtonPlace, 'Создать', 'Создание...');\n  });\n}\nfunction handleAvatarSubmit(evt) {\n  evt.preventDefault();\n  renderLoad(true, popupSaveButtonAvatar);\n  addAvatar(avatarInput.value).then(function (res) {\n    avatarPhoto.src = res.avatar, evt.target.reset();\n    closePopup();\n  }).catch(function (err) {\n    console.log(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(err));\n  }).finally(function () {\n    renderLoad(false, popupSaveButtonAvatar);\n  });\n}\n;// CONCATENATED MODULE: ./src/scripts/index.js\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n // добавьте импорт главного файла \n\n\n\n\n\n\n\npopupFormPlace.addEventListener('submit', handleSubmitCard);\npopupFormProfile.addEventListener('submit', handleSubmitProfile);\npopupFormAvatar.addEventListener('submit', handleAvatarSubmit);\nconfirmationCardDelete.addEventListener('click', function () {\n  serverDeleteCard();\n});\nvar idUser;\nPromise.all([getInitialCards(), getUser()]).then(function (_ref) {\n  var _ref2 = _slicedToArray(_ref, 2),\n    cards = _ref2[0],\n    profileData = _ref2[1];\n  profileName.textContent = profileData.name;\n  profileStatus.textContent = profileData.about;\n  profileName.id = profileData._id;\n  idUser = profileData._id;\n  avatarPhoto.src = profileData.avatar;\n  cards.reverse().forEach(renderCard);\n  enableValidation(settings);\n}).catch(function (err) {\n  console.log(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(err));\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///321\n")}},__webpack_require__={d:(Q,F)=>{for(var U in F)__webpack_require__.o(F,U)&&!__webpack_require__.o(Q,U)&&Object.defineProperty(Q,U,{enumerable:!0,get:F[U]})},o:(Q,F)=>Object.prototype.hasOwnProperty.call(Q,F)},__webpack_exports__={};__webpack_modules__[321](0,__webpack_exports__,__webpack_require__)})();